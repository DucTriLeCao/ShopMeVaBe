// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestStoreWeb.Data;

#nullable disable

namespace TestStoreWeb.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240605005442_addFRKeyToProduct")]
    partial class addFRKeyToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestStoreWeb.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Sữa",
                            DisplayOrder = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Tả",
                            DisplayOrder = 2
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Đồ chơi",
                            DisplayOrder = 3
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Quần áo",
                            DisplayOrder = 4
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Thực Phẩm chức năng",
                            DisplayOrder = 5
                        });
                });

            modelBuilder.Entity("TestStoreWeb.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price10")
                        .HasColumnType("float");

                    b.Property<double>("Price20")
                        .HasColumnType("float");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Brand = "Nutifood",
                            CategoryId = 1,
                            ImageUrl = "",
                            ListPrice = 520.0,
                            Price = 500.0,
                            Price10 = 495.0,
                            Price20 = 485.0,
                            ProductDescription = "Sữa bột cho bé trên 2 tuổi",
                            ProductName = "Sữa bột 850g Varma",
                            Quantity = 550
                        },
                        new
                        {
                            ProductId = 2,
                            Brand = "Huggies",
                            CategoryId = 2,
                            ImageUrl = "",
                            ListPrice = 450.0,
                            Price = 430.0,
                            Price10 = 420.0,
                            Price20 = 410.0,
                            ProductDescription = "Tã quần cao cấp, thoáng mát",
                            ProductName = "Tã quần Huggies size M 74 miếng",
                            Quantity = 200
                        },
                        new
                        {
                            ProductId = 3,
                            Brand = "Lego",
                            CategoryId = 3,
                            ImageUrl = "",
                            ListPrice = 1200.0,
                            Price = 1150.0,
                            Price10 = 1130.0,
                            Price20 = 1100.0,
                            ProductDescription = "Bộ đồ chơi lắp ráp phát triển trí tuệ cho bé",
                            ProductName = "Đồ chơi lắp ráp Lego Classic 900 mảnh",
                            Quantity = 150
                        },
                        new
                        {
                            ProductId = 4,
                            Brand = "Gap",
                            CategoryId = 4,
                            ImageUrl = "",
                            ListPrice = 250.0,
                            Price = 240.0,
                            Price10 = 235.0,
                            Price20 = 230.0,
                            ProductDescription = "Áo thun cotton mềm mại, thoáng mát",
                            ProductName = "Áo thun cotton GAP bé trai size M",
                            Quantity = 350
                        },
                        new
                        {
                            ProductId = 5,
                            Brand = "Pediakid",
                            CategoryId = 5,
                            ImageUrl = "",
                            ListPrice = 300.0,
                            Price = 280.0,
                            Price10 = 270.0,
                            Price20 = 260.0,
                            ProductDescription = "Vitamin tổng hợp giúp tăng cường sức khỏe cho trẻ",
                            ProductName = "Vitamin tổng hợp Pediakid cho trẻ em",
                            Quantity = 500
                        });
                });

            modelBuilder.Entity("TestStoreWeb.Models.Product", b =>
                {
                    b.HasOne("TestStoreWeb.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
